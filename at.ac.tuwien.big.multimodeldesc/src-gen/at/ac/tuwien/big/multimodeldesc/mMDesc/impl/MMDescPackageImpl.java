/**
 * generated by Xtext 2.11.0
 */
package at.ac.tuwien.big.multimodeldesc.mMDesc.impl;

import at.ac.tuwien.big.multimodeldesc.mMDesc.MMDesc;
import at.ac.tuwien.big.multimodeldesc.mMDesc.MMDescFactory;
import at.ac.tuwien.big.multimodeldesc.mMDesc.MMDescPackage;
import at.ac.tuwien.big.multimodeldesc.mMDesc.ModelRef;
import at.ac.tuwien.big.multimodeldesc.mMDesc.ModelView;
import at.ac.tuwien.big.multimodeldesc.mMDesc.PointDesc;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MMDescPackageImpl extends EPackageImpl implements MMDescPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mmDescEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pointDescEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelViewEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see at.ac.tuwien.big.multimodeldesc.mMDesc.MMDescPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MMDescPackageImpl()
  {
    super(eNS_URI, MMDescFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link MMDescPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MMDescPackage init()
  {
    if (isInited) return (MMDescPackage)EPackage.Registry.INSTANCE.getEPackage(MMDescPackage.eNS_URI);

    // Obtain or create and register package
    MMDescPackageImpl theMMDescPackage = (MMDescPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof MMDescPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new MMDescPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theMMDescPackage.createPackageContents();

    // Initialize created meta-data
    theMMDescPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMMDescPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MMDescPackage.eNS_URI, theMMDescPackage);
    return theMMDescPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMMDesc()
  {
    return mmDescEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMMDesc_PointDesc()
  {
    return (EReference)mmDescEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMMDesc_Models()
  {
    return (EReference)mmDescEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMMDesc_View()
  {
    return (EReference)mmDescEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPointDesc()
  {
    return pointDescEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPointDesc_Type()
  {
    return (EAttribute)pointDescEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModelRef()
  {
    return modelRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModelRef_Id()
  {
    return (EAttribute)modelRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModelRef_Uri()
  {
    return (EAttribute)modelRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModelRef_Data()
  {
    return (EAttribute)modelRefEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModelRef_Next()
  {
    return (EReference)modelRefEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModelRef_Continue()
  {
    return (EAttribute)modelRefEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModelView()
  {
    return modelViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModelView_Viewed()
  {
    return (EReference)modelViewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MMDescFactory getMMDescFactory()
  {
    return (MMDescFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    mmDescEClass = createEClass(MM_DESC);
    createEReference(mmDescEClass, MM_DESC__POINT_DESC);
    createEReference(mmDescEClass, MM_DESC__MODELS);
    createEReference(mmDescEClass, MM_DESC__VIEW);

    pointDescEClass = createEClass(POINT_DESC);
    createEAttribute(pointDescEClass, POINT_DESC__TYPE);

    modelRefEClass = createEClass(MODEL_REF);
    createEAttribute(modelRefEClass, MODEL_REF__ID);
    createEAttribute(modelRefEClass, MODEL_REF__URI);
    createEAttribute(modelRefEClass, MODEL_REF__DATA);
    createEReference(modelRefEClass, MODEL_REF__NEXT);
    createEAttribute(modelRefEClass, MODEL_REF__CONTINUE);

    modelViewEClass = createEClass(MODEL_VIEW);
    createEReference(modelViewEClass, MODEL_VIEW__VIEWED);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(mmDescEClass, MMDesc.class, "MMDesc", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMMDesc_PointDesc(), this.getPointDesc(), null, "pointDesc", null, 0, 1, MMDesc.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMMDesc_Models(), this.getModelRef(), null, "models", null, 0, -1, MMDesc.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMMDesc_View(), this.getModelView(), null, "view", null, 0, 1, MMDesc.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pointDescEClass, PointDesc.class, "PointDesc", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPointDesc_Type(), ecorePackage.getEString(), "type", null, 0, -1, PointDesc.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelRefEClass, ModelRef.class, "ModelRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModelRef_Id(), ecorePackage.getEInt(), "id", null, 0, 1, ModelRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModelRef_Uri(), ecorePackage.getEString(), "uri", null, 0, 1, ModelRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModelRef_Data(), ecorePackage.getEString(), "data", null, 0, -1, ModelRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModelRef_Next(), this.getModelRef(), null, "next", null, 0, -1, ModelRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModelRef_Continue(), ecorePackage.getEBoolean(), "continue", null, 0, 1, ModelRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelViewEClass, ModelView.class, "ModelView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModelView_Viewed(), this.getModelRef(), null, "viewed", null, 0, -1, ModelView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MMDescPackageImpl
