/**
 * generated by Xtext 2.11.0
 */
package at.ac.tuwien.big.multimodeldesc.mMDesc.impl;

import at.ac.tuwien.big.multimodeldesc.mMDesc.MMDescPackage;
import at.ac.tuwien.big.multimodeldesc.mMDesc.ModelRef;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Ref</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.ac.tuwien.big.multimodeldesc.mMDesc.impl.ModelRefImpl#getId <em>Id</em>}</li>
 *   <li>{@link at.ac.tuwien.big.multimodeldesc.mMDesc.impl.ModelRefImpl#getUri <em>Uri</em>}</li>
 *   <li>{@link at.ac.tuwien.big.multimodeldesc.mMDesc.impl.ModelRefImpl#getData <em>Data</em>}</li>
 *   <li>{@link at.ac.tuwien.big.multimodeldesc.mMDesc.impl.ModelRefImpl#getNext <em>Next</em>}</li>
 *   <li>{@link at.ac.tuwien.big.multimodeldesc.mMDesc.impl.ModelRefImpl#isContinue <em>Continue</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelRefImpl extends MinimalEObjectImpl.Container implements ModelRef
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected int id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getUri() <em>Uri</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUri()
   * @generated
   * @ordered
   */
  protected static final String URI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUri() <em>Uri</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUri()
   * @generated
   * @ordered
   */
  protected String uri = URI_EDEFAULT;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected EList<String> data;

  /**
   * The cached value of the '{@link #getNext() <em>Next</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNext()
   * @generated
   * @ordered
   */
  protected EList<ModelRef> next;

  /**
   * The default value of the '{@link #isContinue() <em>Continue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isContinue()
   * @generated
   * @ordered
   */
  protected static final boolean CONTINUE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isContinue() <em>Continue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isContinue()
   * @generated
   * @ordered
   */
  protected boolean continue_ = CONTINUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelRefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MMDescPackage.Literals.MODEL_REF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(int newId)
  {
    int oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MMDescPackage.MODEL_REF__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUri()
  {
    return uri;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUri(String newUri)
  {
    String oldUri = uri;
    uri = newUri;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MMDescPackage.MODEL_REF__URI, oldUri, uri));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getData()
  {
    if (data == null)
    {
      data = new EDataTypeEList<String>(String.class, this, MMDescPackage.MODEL_REF__DATA);
    }
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ModelRef> getNext()
  {
    if (next == null)
    {
      next = new EObjectContainmentEList<ModelRef>(ModelRef.class, this, MMDescPackage.MODEL_REF__NEXT);
    }
    return next;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isContinue()
  {
    return continue_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContinue(boolean newContinue)
  {
    boolean oldContinue = continue_;
    continue_ = newContinue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MMDescPackage.MODEL_REF__CONTINUE, oldContinue, continue_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MMDescPackage.MODEL_REF__NEXT:
        return ((InternalEList<?>)getNext()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MMDescPackage.MODEL_REF__ID:
        return getId();
      case MMDescPackage.MODEL_REF__URI:
        return getUri();
      case MMDescPackage.MODEL_REF__DATA:
        return getData();
      case MMDescPackage.MODEL_REF__NEXT:
        return getNext();
      case MMDescPackage.MODEL_REF__CONTINUE:
        return isContinue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MMDescPackage.MODEL_REF__ID:
        setId((Integer)newValue);
        return;
      case MMDescPackage.MODEL_REF__URI:
        setUri((String)newValue);
        return;
      case MMDescPackage.MODEL_REF__DATA:
        getData().clear();
        getData().addAll((Collection<? extends String>)newValue);
        return;
      case MMDescPackage.MODEL_REF__NEXT:
        getNext().clear();
        getNext().addAll((Collection<? extends ModelRef>)newValue);
        return;
      case MMDescPackage.MODEL_REF__CONTINUE:
        setContinue((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MMDescPackage.MODEL_REF__ID:
        setId(ID_EDEFAULT);
        return;
      case MMDescPackage.MODEL_REF__URI:
        setUri(URI_EDEFAULT);
        return;
      case MMDescPackage.MODEL_REF__DATA:
        getData().clear();
        return;
      case MMDescPackage.MODEL_REF__NEXT:
        getNext().clear();
        return;
      case MMDescPackage.MODEL_REF__CONTINUE:
        setContinue(CONTINUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MMDescPackage.MODEL_REF__ID:
        return id != ID_EDEFAULT;
      case MMDescPackage.MODEL_REF__URI:
        return URI_EDEFAULT == null ? uri != null : !URI_EDEFAULT.equals(uri);
      case MMDescPackage.MODEL_REF__DATA:
        return data != null && !data.isEmpty();
      case MMDescPackage.MODEL_REF__NEXT:
        return next != null && !next.isEmpty();
      case MMDescPackage.MODEL_REF__CONTINUE:
        return continue_ != CONTINUE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(", uri: ");
    result.append(uri);
    result.append(", data: ");
    result.append(data);
    result.append(", continue: ");
    result.append(continue_);
    result.append(')');
    return result.toString();
  }

} //ModelRefImpl
