/*
 * generated by Xtext 2.11.0
 */
grammar InternalMMDesc;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package at.ac.tuwien.big.multimodeldesc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.multimodeldesc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.multimodeldesc.services.MMDescGrammarAccess;

}
@parser::members {
	private MMDescGrammarAccess grammarAccess;

	public void setGrammarAccess(MMDescGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMMDesc
entryRuleMMDesc
:
{ before(grammarAccess.getMMDescRule()); }
	 ruleMMDesc
{ after(grammarAccess.getMMDescRule()); } 
	 EOF 
;

// Rule MMDesc
ruleMMDesc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMMDescAccess().getGroup()); }
		(rule__MMDesc__Group__0)
		{ after(grammarAccess.getMMDescAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointDesc
entryRulePointDesc
:
{ before(grammarAccess.getPointDescRule()); }
	 rulePointDesc
{ after(grammarAccess.getPointDescRule()); } 
	 EOF 
;

// Rule PointDesc
rulePointDesc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointDescAccess().getGroup()); }
		(rule__PointDesc__Group__0)
		{ after(grammarAccess.getPointDescAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelRef
entryRuleModelRef
:
{ before(grammarAccess.getModelRefRule()); }
	 ruleModelRef
{ after(grammarAccess.getModelRefRule()); } 
	 EOF 
;

// Rule ModelRef
ruleModelRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelRefAccess().getGroup()); }
		(rule__ModelRef__Group__0)
		{ after(grammarAccess.getModelRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelView
entryRuleModelView
:
{ before(grammarAccess.getModelViewRule()); }
	 ruleModelView
{ after(grammarAccess.getModelViewRule()); } 
	 EOF 
;

// Rule ModelView
ruleModelView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelViewAccess().getGroup()); }
		(rule__ModelView__Group__0)
		{ after(grammarAccess.getModelViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeAssignment_3_0()); }
		(rule__PointDesc__TypeAssignment_3_0)
		{ after(grammarAccess.getPointDescAccess().getTypeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointDescAccess().getGroup_3_1()); }
		(rule__PointDesc__Group_3_1__0)
		{ after(grammarAccess.getPointDescAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Alternatives_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_1_1_0()); }
		(rule__PointDesc__TypeAssignment_3_1_1_1_0)
		{ after(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_1_1_1()); }
		(rule__PointDesc__TypeAssignment_3_1_1_1_1)
		{ after(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getDataAssignment_3_1_0()); }
		(rule__ModelRef__DataAssignment_3_1_0)
		{ after(grammarAccess.getModelRefAccess().getDataAssignment_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelRefAccess().getIDTerminalRuleCall_3_1_1()); }
		RULE_ID
		{ after(grammarAccess.getModelRefAccess().getIDTerminalRuleCall_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelRefAccess().getINTTerminalRuleCall_3_1_2()); }
		RULE_INT
		{ after(grammarAccess.getModelRefAccess().getINTTerminalRuleCall_3_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMDesc__Group__0__Impl
	rule__MMDesc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMDescAccess().getPointDescAssignment_0()); }
	(rule__MMDesc__PointDescAssignment_0)
	{ after(grammarAccess.getMMDescAccess().getPointDescAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMDesc__Group__1__Impl
	rule__MMDesc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMDescAccess().getModelsAssignment_1()); }
	(rule__MMDesc__ModelsAssignment_1)*
	{ after(grammarAccess.getMMDescAccess().getModelsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MMDesc__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMDescAccess().getViewAssignment_2()); }
	(rule__MMDesc__ViewAssignment_2)?
	{ after(grammarAccess.getMMDescAccess().getViewAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointDesc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group__0__Impl
	rule__PointDesc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getPointDescAction_0()); }
	()
	{ after(grammarAccess.getPointDescAccess().getPointDescAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group__1__Impl
	rule__PointDesc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getPointDescKeyword_1()); }
	'PointDesc'
	{ after(grammarAccess.getPointDescAccess().getPointDescKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group__2__Impl
	rule__PointDesc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getPointDescAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group__3__Impl
	rule__PointDesc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getAlternatives_3()); }
	(rule__PointDesc__Alternatives_3)?
	{ after(grammarAccess.getPointDescAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getPointDescAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointDesc__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group_3_1__0__Impl
	rule__PointDesc__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_0()); }
	(rule__PointDesc__TypeAssignment_3_1_0)
	{ after(grammarAccess.getPointDescAccess().getTypeAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getGroup_3_1_1()); }
	(rule__PointDesc__Group_3_1_1__0)*
	{ after(grammarAccess.getPointDescAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointDesc__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group_3_1_1__0__Impl
	rule__PointDesc__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getCommaKeyword_3_1_1_0()); }
	','
	{ after(grammarAccess.getPointDescAccess().getCommaKeyword_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDesc__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDescAccess().getAlternatives_3_1_1_1()); }
	(rule__PointDesc__Alternatives_3_1_1_1)
	{ after(grammarAccess.getPointDescAccess().getAlternatives_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__0__Impl
	rule__ModelRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelRefAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__1__Impl
	rule__ModelRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getIdAssignment_1()); }
	(rule__ModelRef__IdAssignment_1)
	{ after(grammarAccess.getModelRefAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__2__Impl
	rule__ModelRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getUriAssignment_2()); }
	(rule__ModelRef__UriAssignment_2)
	{ after(grammarAccess.getModelRefAccess().getUriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__3__Impl
	rule__ModelRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getGroup_3()); }
	(rule__ModelRef__Group_3__0)?
	{ after(grammarAccess.getModelRefAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__4__Impl
	rule__ModelRef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getGroup_4()); }
	(rule__ModelRef__Group_4__0)?
	{ after(grammarAccess.getModelRefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getContinueAssignment_5()); }
	(rule__ModelRef__ContinueAssignment_5)?
	{ after(grammarAccess.getModelRefAccess().getContinueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_3__0__Impl
	rule__ModelRef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getModelRefAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_3__1__Impl
	rule__ModelRef__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getAlternatives_3_1()); }
	(rule__ModelRef__Alternatives_3_1)
	{ after(grammarAccess.getModelRefAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getRightSquareBracketKeyword_3_2()); }
	']'
	{ after(grammarAccess.getModelRefAccess().getRightSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_4__0__Impl
	rule__ModelRef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getModelRefAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_4__1__Impl
	rule__ModelRef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getNextAssignment_4_1()); }
	(rule__ModelRef__NextAssignment_4_1)*
	{ after(grammarAccess.getModelRefAccess().getNextAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRef__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRefAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getModelRefAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelView__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group__0__Impl
	rule__ModelView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getModelViewAction_0()); }
	()
	{ after(grammarAccess.getModelViewAccess().getModelViewAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group__1__Impl
	rule__ModelView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getViewKeyword_1()); }
	'view'
	{ after(grammarAccess.getModelViewAccess().getViewKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group__2__Impl
	rule__ModelView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getModelViewAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group__3__Impl
	rule__ModelView__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getGroup_3()); }
	(rule__ModelView__Group_3__0)?
	{ after(grammarAccess.getModelViewAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getModelViewAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelView__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group_3__0__Impl
	rule__ModelView__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getViewedAssignment_3_0()); }
	(rule__ModelView__ViewedAssignment_3_0)
	{ after(grammarAccess.getModelViewAccess().getViewedAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getGroup_3_1()); }
	(rule__ModelView__Group_3_1__0)*
	{ after(grammarAccess.getModelViewAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelView__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group_3_1__0__Impl
	rule__ModelView__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getModelViewAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelView__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelViewAccess().getViewedAssignment_3_1_1()); }
	(rule__ModelView__ViewedAssignment_3_1_1)
	{ after(grammarAccess.getModelViewAccess().getViewedAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MMDesc__PointDescAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMDescAccess().getPointDescPointDescParserRuleCall_0_0()); }
		rulePointDesc
		{ after(grammarAccess.getMMDescAccess().getPointDescPointDescParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__ModelsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMDescAccess().getModelsModelRefParserRuleCall_1_0()); }
		ruleModelRef
		{ after(grammarAccess.getMMDescAccess().getModelsModelRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MMDesc__ViewAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMDescAccess().getViewModelViewParserRuleCall_2_0()); }
		ruleModelView
		{ after(grammarAccess.getMMDescAccess().getViewModelViewParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__TypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_0_0()); }
			'Integer'
			{ after(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__TypeAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_0_0()); }
		(
			{ before(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_0_0()); }
			'String'
			{ after(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_0_0()); }
		)
		{ after(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__TypeAssignment_3_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_1_1_1_0_0()); }
		(
			{ before(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_1_1_1_0_0()); }
			'Integer'
			{ after(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_1_1_1_0_0()); }
		)
		{ after(grammarAccess.getPointDescAccess().getTypeIntegerKeyword_3_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDesc__TypeAssignment_3_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_1_1_1_0()); }
		(
			{ before(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_1_1_1_0()); }
			'String'
			{ after(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_1_1_1_0()); }
		)
		{ after(grammarAccess.getPointDescAccess().getTypeStringKeyword_3_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getIdINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getModelRefAccess().getIdINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__UriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getUriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelRefAccess().getUriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__DataAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getDataSTRINGTerminalRuleCall_3_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelRefAccess().getDataSTRINGTerminalRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__NextAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getNextModelRefParserRuleCall_4_1_0()); }
		ruleModelRef
		{ after(grammarAccess.getModelRefAccess().getNextModelRefParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRef__ContinueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRefAccess().getContinuePlusSignKeyword_5_0()); }
		(
			{ before(grammarAccess.getModelRefAccess().getContinuePlusSignKeyword_5_0()); }
			'+'
			{ after(grammarAccess.getModelRefAccess().getContinuePlusSignKeyword_5_0()); }
		)
		{ after(grammarAccess.getModelRefAccess().getContinuePlusSignKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__ViewedAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelViewAccess().getViewedModelRefCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getModelViewAccess().getViewedModelRefIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModelViewAccess().getViewedModelRefIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getModelViewAccess().getViewedModelRefCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelView__ViewedAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelViewAccess().getViewedModelRefCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getModelViewAccess().getViewedModelRefIDTerminalRuleCall_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModelViewAccess().getViewedModelRefIDTerminalRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getModelViewAccess().getViewedModelRefCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
