/**
 * generated by Xtext 2.10.0
 */
package at.ac.tuwien.big.simpleaspect.simpleAspect;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimpleAspectFactory
 * @model kind="package"
 * @generated
 */
public interface SimpleAspectPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "simpleAspect";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.ac.at/tuwien/big/simpleaspect/SimpleAspect";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "simpleAspect";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SimpleAspectPackage eINSTANCE = at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl.init();

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectImpl <em>Aspect</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAspect()
   * @generated
   */
  int ASPECT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT__NAME = 0;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT__ATTRIBUTES = 1;

  /**
   * The feature id for the '<em><b>Methods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT__METHODS = 2;

  /**
   * The feature id for the '<em><b>Pointcuts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT__POINTCUTS = 3;

  /**
   * The feature id for the '<em><b>Advices</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT__ADVICES = 4;

  /**
   * The number of structural features of the '<em>Aspect</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForeignAttributeImpl <em>Foreign Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForeignAttributeImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForeignAttribute()
   * @generated
   */
  int FOREIGN_ATTRIBUTE = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_ATTRIBUTE__TYPE = 0;

  /**
   * The feature id for the '<em><b>In Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_ATTRIBUTE__IN_TYPE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_ATTRIBUTE__NAME = 2;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_ATTRIBUTE__EXPRESSION = 3;

  /**
   * The number of structural features of the '<em>Foreign Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_ATTRIBUTE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutImpl <em>Pointcut</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcut()
   * @generated
   */
  int POINTCUT = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT__PARAMETER = 1;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT__CONDITION = 2;

  /**
   * The number of structural features of the '<em>Pointcut</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutConditionImpl <em>Pointcut Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutConditionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutCondition()
   * @generated
   */
  int POINTCUT_CONDITION = 3;

  /**
   * The number of structural features of the '<em>Pointcut Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_CONDITION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryPointcutConditionImpl <em>Unary Pointcut Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryPointcutConditionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getUnaryPointcutCondition()
   * @generated
   */
  int UNARY_POINTCUT_CONDITION = 4;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_POINTCUT_CONDITION__CONDITION = POINTCUT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Unary Pointcut Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_POINTCUT_CONDITION_FEATURE_COUNT = POINTCUT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BinaryPointcutConditionImpl <em>Binary Pointcut Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BinaryPointcutConditionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getBinaryPointcutCondition()
   * @generated
   */
  int BINARY_POINTCUT_CONDITION = 5;

  /**
   * The feature id for the '<em><b>First</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_POINTCUT_CONDITION__FIRST = POINTCUT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_POINTCUT_CONDITION__TYPE = POINTCUT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Second</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_POINTCUT_CONDITION__SECOND = POINTCUT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Binary Pointcut Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_POINTCUT_CONDITION_FEATURE_COUNT = POINTCUT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimplePointcutConditionImpl <em>Simple Pointcut Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimplePointcutConditionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimplePointcutCondition()
   * @generated
   */
  int SIMPLE_POINTCUT_CONDITION = 6;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_POINTCUT_CONDITION__TYPE = POINTCUT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_POINTCUT_CONDITION__CONDITION = POINTCUT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Simple Pointcut Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_POINTCUT_CONDITION_FEATURE_COUNT = POINTCUT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutMethodFilterImpl <em>Pointcut Method Filter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutMethodFilterImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutMethodFilter()
   * @generated
   */
  int POINTCUT_METHOD_FILTER = 7;

  /**
   * The feature id for the '<em><b>Is Public</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__IS_PUBLIC = 0;

  /**
   * The feature id for the '<em><b>Is Private</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__IS_PRIVATE = 1;

  /**
   * The feature id for the '<em><b>Is Static</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__IS_STATIC = 2;

  /**
   * The feature id for the '<em><b>Any Return</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__ANY_RETURN = 3;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__RETURN_TYPE = 4;

  /**
   * The feature id for the '<em><b>Any Class</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__ANY_CLASS = 5;

  /**
   * The feature id for the '<em><b>Class Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__CLASS_TYPE = 6;

  /**
   * The feature id for the '<em><b>Any Method</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__ANY_METHOD = 7;

  /**
   * The feature id for the '<em><b>Method Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__METHOD_NAME = 8;

  /**
   * The feature id for the '<em><b>Any Parameter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__ANY_PARAMETER = 9;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER__PARAMETER = 10;

  /**
   * The number of structural features of the '<em>Pointcut Method Filter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_METHOD_FILTER_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutTypeFilterImpl <em>Pointcut Type Filter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutTypeFilterImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutTypeFilter()
   * @generated
   */
  int POINTCUT_TYPE_FILTER = 8;

  /**
   * The feature id for the '<em><b>Class Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_TYPE_FILTER__CLASS_TYPE = 0;

  /**
   * The number of structural features of the '<em>Pointcut Type Filter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_TYPE_FILTER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AdviceImpl <em>Advice</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AdviceImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAdvice()
   * @generated
   */
  int ADVICE = 9;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVICE__TYPE = 0;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVICE__PARAMETER = 1;

  /**
   * The feature id for the '<em><b>Pointcut</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVICE__POINTCUT = 2;

  /**
   * The feature id for the '<em><b>Code</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVICE__CODE = 3;

  /**
   * The number of structural features of the '<em>Advice</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVICE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutRefImpl <em>Pointcut Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutRefImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutRef()
   * @generated
   */
  int POINTCUT_REF = 10;

  /**
   * The feature id for the '<em><b>Pointcut</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_REF__POINTCUT = 0;

  /**
   * The feature id for the '<em><b>Parameter Value</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_REF__PARAMETER_VALUE = 1;

  /**
   * The number of structural features of the '<em>Pointcut Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTCUT_REF_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParameterImpl <em>Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParameterImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getParameter()
   * @generated
   */
  int PARAMETER = 11;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__NAME = 1;

  /**
   * The number of structural features of the '<em>Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.TypeImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getType()
   * @generated
   */
  int TYPE = 12;

  /**
   * The feature id for the '<em><b>Type Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__TYPE_NAME = 0;

  /**
   * The feature id for the '<em><b>Type Ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__TYPE_REF = 1;

  /**
   * The feature id for the '<em><b>Is Void</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__IS_VOID = 2;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethod()
   * @generated
   */
  int METHOD = 13;

  /**
   * The feature id for the '<em><b>Static</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__STATIC = 0;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__RETURN_TYPE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__NAME = 2;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__PARAMETER = 3;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__CONTENT = 4;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 16;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodBlockImpl <em>Method Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodBlockImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethodBlock()
   * @generated
   */
  int METHOD_BLOCK = 14;

  /**
   * The feature id for the '<em><b>Generated</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_BLOCK__GENERATED = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_BLOCK__STATEMENTS = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Method Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_BLOCK_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleStatementImpl <em>Simple Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimpleStatement()
   * @generated
   */
  int SIMPLE_STATEMENT = 15;

  /**
   * The number of structural features of the '<em>Simple Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleVariableDeclarationImpl <em>Simple Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleVariableDeclarationImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimpleVariableDeclaration()
   * @generated
   */
  int SIMPLE_VARIABLE_DECLARATION = 17;

  /**
   * The number of structural features of the '<em>Simple Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_VARIABLE_DECLARATION_FEATURE_COUNT = SIMPLE_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableDeclarationImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getVariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 18;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__PARAMETER = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__EXPRESSION = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AssignmentImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 19;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__PARAMETER = SIMPLE_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__EXPRESSION = SIMPLE_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = SIMPLE_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IfStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 20;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__THEN = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__ELSE = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForStatementImpl <em>For Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForStatement()
   * @generated
   */
  int FOR_STATEMENT = 21;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__INIT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Continuation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__CONTINUATION = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>For Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForInStatementImpl <em>For In Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForInStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForInStatement()
   * @generated
   */
  int FOR_IN_STATEMENT = 22;

  /**
   * The feature id for the '<em><b>Subparameter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_IN_STATEMENT__SUBPARAMETER = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_IN_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_IN_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>For In Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_IN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.WhileStatementImpl <em>While Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.WhileStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getWhileStatement()
   * @generated
   */
  int WHILE_STATEMENT = 23;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ReturnStatementImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getReturnStatement()
   * @generated
   */
  int RETURN_STATEMENT = 24;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodCallImpl <em>Method Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodCallImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethodCall()
   * @generated
   */
  int METHOD_CALL = 25;

  /**
   * The feature id for the '<em><b>Object</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__OBJECT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>This Object</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__THIS_OBJECT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Method</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__METHOD = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Method Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__METHOD_NAME = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL__PARAMETER = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Method Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_CALL_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.GenericExpressionImpl <em>Generic Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.GenericExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getGenericExpression()
   * @generated
   */
  int GENERIC_EXPRESSION = 26;

  /**
   * The number of structural features of the '<em>Generic Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERIC_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstructorCallImpl <em>Constructor Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstructorCallImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getConstructorCall()
   * @generated
   */
  int CONSTRUCTOR_CALL = 27;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_CALL__TYPE = GENERIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_CALL__PARAMETER = GENERIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Constructor Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_CALL_FEATURE_COUNT = GENERIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstantExpressionImpl <em>Constant Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstantExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getConstantExpression()
   * @generated
   */
  int CONSTANT_EXPRESSION = 28;

  /**
   * The number of structural features of the '<em>Constant Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_EXPRESSION_FEATURE_COUNT = GENERIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectExpressionImpl <em>Aspect Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAspectExpression()
   * @generated
   */
  int ASPECT_EXPRESSION = 29;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT_EXPRESSION__VALUE = CONSTANT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Aspect Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASPECT_EXPRESSION_FEATURE_COUNT = CONSTANT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.NullExpressionImpl <em>Null Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.NullExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getNullExpression()
   * @generated
   */
  int NULL_EXPRESSION = 30;

  /**
   * The number of structural features of the '<em>Null Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_EXPRESSION_FEATURE_COUNT = CONSTANT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IntegerExpressionImpl <em>Integer Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IntegerExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getIntegerExpression()
   * @generated
   */
  int INTEGER_EXPRESSION = 31;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_EXPRESSION__VALUE = CONSTANT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Integer Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_EXPRESSION_FEATURE_COUNT = CONSTANT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BooleanExpressionImpl <em>Boolean Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BooleanExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getBooleanExpression()
   * @generated
   */
  int BOOLEAN_EXPRESSION = 32;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION__VALUE = CONSTANT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_FEATURE_COUNT = CONSTANT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StringExpressionImpl <em>String Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StringExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getStringExpression()
   * @generated
   */
  int STRING_EXPRESSION = 33;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__VALUE = CONSTANT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION_FEATURE_COUNT = CONSTANT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 34;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__TYPE = GENERIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__SOURCE = GENERIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = GENERIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableExpressionImpl <em>Variable Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getVariableExpression()
   * @generated
   */
  int VARIABLE_EXPRESSION = 35;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION__VARIABLE = GENERIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_EXPRESSION_FEATURE_COUNT = GENERIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParanthesisOrBinaryExpressionImpl <em>Paranthesis Or Binary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParanthesisOrBinaryExpressionImpl
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getParanthesisOrBinaryExpression()
   * @generated
   */
  int PARANTHESIS_OR_BINARY_EXPRESSION = 36;

  /**
   * The feature id for the '<em><b>Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIS_OR_BINARY_EXPRESSION__SOURCE = GENERIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIS_OR_BINARY_EXPRESSION__TYPE = GENERIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Argument</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIS_OR_BINARY_EXPRESSION__ARGUMENT = GENERIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Paranthesis Or Binary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIS_OR_BINARY_EXPRESSION_FEATURE_COUNT = GENERIC_EXPRESSION_FEATURE_COUNT + 3;


  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect <em>Aspect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aspect</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect
   * @generated
   */
  EClass getAspect();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getName()
   * @see #getAspect()
   * @generated
   */
  EAttribute getAspect_Name();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Attributes</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getAttributes()
   * @see #getAspect()
   * @generated
   */
  EReference getAspect_Attributes();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getMethods <em>Methods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Methods</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getMethods()
   * @see #getAspect()
   * @generated
   */
  EReference getAspect_Methods();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getPointcuts <em>Pointcuts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Pointcuts</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getPointcuts()
   * @see #getAspect()
   * @generated
   */
  EReference getAspect_Pointcuts();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getAdvices <em>Advices</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Advices</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Aspect#getAdvices()
   * @see #getAspect()
   * @generated
   */
  EReference getAspect_Advices();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute <em>Foreign Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foreign Attribute</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute
   * @generated
   */
  EClass getForeignAttribute();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getType()
   * @see #getForeignAttribute()
   * @generated
   */
  EReference getForeignAttribute_Type();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getInType <em>In Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>In Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getInType()
   * @see #getForeignAttribute()
   * @generated
   */
  EAttribute getForeignAttribute_InType();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getName()
   * @see #getForeignAttribute()
   * @generated
   */
  EAttribute getForeignAttribute_Name();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForeignAttribute#getExpression()
   * @see #getForeignAttribute()
   * @generated
   */
  EReference getForeignAttribute_Expression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut <em>Pointcut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pointcut</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut
   * @generated
   */
  EClass getPointcut();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getName()
   * @see #getPointcut()
   * @generated
   */
  EAttribute getPointcut_Name();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getParameter()
   * @see #getPointcut()
   * @generated
   */
  EReference getPointcut_Parameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Pointcut#getCondition()
   * @see #getPointcut()
   * @generated
   */
  EReference getPointcut_Condition();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutCondition <em>Pointcut Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pointcut Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutCondition
   * @generated
   */
  EClass getPointcutCondition();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryPointcutCondition <em>Unary Pointcut Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Pointcut Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryPointcutCondition
   * @generated
   */
  EClass getUnaryPointcutCondition();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryPointcutCondition#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryPointcutCondition#getCondition()
   * @see #getUnaryPointcutCondition()
   * @generated
   */
  EReference getUnaryPointcutCondition_Condition();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition <em>Binary Pointcut Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binary Pointcut Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition
   * @generated
   */
  EClass getBinaryPointcutCondition();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getFirst <em>First</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>First</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getFirst()
   * @see #getBinaryPointcutCondition()
   * @generated
   */
  EReference getBinaryPointcutCondition_First();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getType()
   * @see #getBinaryPointcutCondition()
   * @generated
   */
  EAttribute getBinaryPointcutCondition_Type();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getSecond <em>Second</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Second</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BinaryPointcutCondition#getSecond()
   * @see #getBinaryPointcutCondition()
   * @generated
   */
  EReference getBinaryPointcutCondition_Second();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition <em>Simple Pointcut Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Pointcut Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition
   * @generated
   */
  EClass getSimplePointcutCondition();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition#getType()
   * @see #getSimplePointcutCondition()
   * @generated
   */
  EAttribute getSimplePointcutCondition_Type();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimplePointcutCondition#getCondition()
   * @see #getSimplePointcutCondition()
   * @generated
   */
  EReference getSimplePointcutCondition_Condition();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter <em>Pointcut Method Filter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pointcut Method Filter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter
   * @generated
   */
  EClass getPointcutMethodFilter();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsPublic <em>Is Public</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Public</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsPublic()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_IsPublic();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsPrivate <em>Is Private</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Private</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsPrivate()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_IsPrivate();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsStatic <em>Is Static</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Static</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isIsStatic()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_IsStatic();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyReturn <em>Any Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Any Return</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyReturn()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_AnyReturn();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getReturnType()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EReference getPointcutMethodFilter_ReturnType();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyClass <em>Any Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Any Class</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyClass()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_AnyClass();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getClassType <em>Class Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Class Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getClassType()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_ClassType();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyMethod <em>Any Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Any Method</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyMethod()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_AnyMethod();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getMethodName <em>Method Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Method Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getMethodName()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_MethodName();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyParameter <em>Any Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Any Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#isAnyParameter()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EAttribute getPointcutMethodFilter_AnyParameter();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutMethodFilter#getParameter()
   * @see #getPointcutMethodFilter()
   * @generated
   */
  EReference getPointcutMethodFilter_Parameter();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutTypeFilter <em>Pointcut Type Filter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pointcut Type Filter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutTypeFilter
   * @generated
   */
  EClass getPointcutTypeFilter();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutTypeFilter#getClassType <em>Class Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Class Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutTypeFilter#getClassType()
   * @see #getPointcutTypeFilter()
   * @generated
   */
  EAttribute getPointcutTypeFilter_ClassType();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Advice <em>Advice</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Advice</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Advice
   * @generated
   */
  EClass getAdvice();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getType()
   * @see #getAdvice()
   * @generated
   */
  EAttribute getAdvice_Type();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getParameter()
   * @see #getAdvice()
   * @generated
   */
  EReference getAdvice_Parameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getPointcut <em>Pointcut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pointcut</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getPointcut()
   * @see #getAdvice()
   * @generated
   */
  EReference getAdvice_Pointcut();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Code</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Advice#getCode()
   * @see #getAdvice()
   * @generated
   */
  EReference getAdvice_Code();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef <em>Pointcut Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pointcut Ref</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef
   * @generated
   */
  EClass getPointcutRef();

  /**
   * Returns the meta object for the reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef#getPointcut <em>Pointcut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pointcut</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef#getPointcut()
   * @see #getPointcutRef()
   * @generated
   */
  EReference getPointcutRef_Pointcut();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef#getParameterValue <em>Parameter Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter Value</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.PointcutRef#getParameterValue()
   * @see #getPointcutRef()
   * @generated
   */
  EReference getPointcutRef_ParameterValue();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter
   * @generated
   */
  EClass getParameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter#getType()
   * @see #getParameter()
   * @generated
   */
  EReference getParameter_Type();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Parameter#getName()
   * @see #getParameter()
   * @generated
   */
  EAttribute getParameter_Name();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Type#getTypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Type#getTypeName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_TypeName();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Type#getTypeRef <em>Type Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Ref</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Type#getTypeRef()
   * @see #getType()
   * @generated
   */
  EAttribute getType_TypeRef();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Type#isIsVoid <em>Is Void</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Void</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Type#isIsVoid()
   * @see #getType()
   * @generated
   */
  EAttribute getType_IsVoid();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method
   * @generated
   */
  EClass getMethod();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method#isStatic <em>Static</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Static</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method#isStatic()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_Static();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getReturnType()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_ReturnType();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getName()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_Name();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getParameter()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Parameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Method#getContent()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Content();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock <em>Method Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method Block</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock
   * @generated
   */
  EClass getMethodBlock();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock#isGenerated <em>Generated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Generated</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock#isGenerated()
   * @see #getMethodBlock()
   * @generated
   */
  EAttribute getMethodBlock_Generated();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodBlock#getStatements()
   * @see #getMethodBlock()
   * @generated
   */
  EReference getMethodBlock_Statements();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.SimpleStatement <em>Simple Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimpleStatement
   * @generated
   */
  EClass getSimpleStatement();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.SimpleVariableDeclaration <em>Simple Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Variable Declaration</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.SimpleVariableDeclaration
   * @generated
   */
  EClass getSimpleVariableDeclaration();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration
   * @generated
   */
  EClass getVariableDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration#getParameter()
   * @see #getVariableDeclaration()
   * @generated
   */
  EReference getVariableDeclaration_Parameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.VariableDeclaration#getExpression()
   * @see #getVariableDeclaration()
   * @generated
   */
  EReference getVariableDeclaration_Expression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment#getParameter()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Parameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.Assignment#getExpression()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Expression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getCondition()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getThen()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Then();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IfStatement#getElse()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Else();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement <em>For Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement
   * @generated
   */
  EClass getForStatement();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getInit()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Init();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getCondition()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getContinuation <em>Continuation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Continuation</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getContinuation()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Continuation();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForStatement#getBody()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Body();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement <em>For In Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For In Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement
   * @generated
   */
  EClass getForInStatement();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getSubparameter <em>Subparameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subparameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getSubparameter()
   * @see #getForInStatement()
   * @generated
   */
  EReference getForInStatement_Subparameter();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getExpression()
   * @see #getForInStatement()
   * @generated
   */
  EReference getForInStatement_Expression();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ForInStatement#getBody()
   * @see #getForInStatement()
   * @generated
   */
  EReference getForInStatement_Body();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement <em>While Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement
   * @generated
   */
  EClass getWhileStatement();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement#getCondition()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.WhileStatement#getBody()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_Body();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ReturnStatement <em>Return Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Statement</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ReturnStatement
   * @generated
   */
  EClass getReturnStatement();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ReturnStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ReturnStatement#getExpression()
   * @see #getReturnStatement()
   * @generated
   */
  EReference getReturnStatement_Expression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall <em>Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method Call</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall
   * @generated
   */
  EClass getMethodCall();

  /**
   * Returns the meta object for the reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getObject <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Object</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getObject()
   * @see #getMethodCall()
   * @generated
   */
  EReference getMethodCall_Object();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#isThisObject <em>This Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>This Object</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#isThisObject()
   * @see #getMethodCall()
   * @generated
   */
  EAttribute getMethodCall_ThisObject();

  /**
   * Returns the meta object for the reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Method</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getMethod()
   * @see #getMethodCall()
   * @generated
   */
  EReference getMethodCall_Method();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getMethodName <em>Method Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Method Name</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getMethodName()
   * @see #getMethodCall()
   * @generated
   */
  EAttribute getMethodCall_MethodName();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.MethodCall#getParameter()
   * @see #getMethodCall()
   * @generated
   */
  EReference getMethodCall_Parameter();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.GenericExpression <em>Generic Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Generic Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.GenericExpression
   * @generated
   */
  EClass getGenericExpression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall <em>Constructor Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constructor Call</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall
   * @generated
   */
  EClass getConstructorCall();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall#getType()
   * @see #getConstructorCall()
   * @generated
   */
  EReference getConstructorCall_Type();

  /**
   * Returns the meta object for the containment reference list '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ConstructorCall#getParameter()
   * @see #getConstructorCall()
   * @generated
   */
  EReference getConstructorCall_Parameter();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ConstantExpression <em>Constant Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ConstantExpression
   * @generated
   */
  EClass getConstantExpression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.AspectExpression <em>Aspect Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aspect Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.AspectExpression
   * @generated
   */
  EClass getAspectExpression();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.AspectExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.AspectExpression#getValue()
   * @see #getAspectExpression()
   * @generated
   */
  EAttribute getAspectExpression_Value();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.NullExpression <em>Null Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Null Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.NullExpression
   * @generated
   */
  EClass getNullExpression();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IntegerExpression <em>Integer Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Integer Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IntegerExpression
   * @generated
   */
  EClass getIntegerExpression();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.IntegerExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.IntegerExpression#getValue()
   * @see #getIntegerExpression()
   * @generated
   */
  EAttribute getIntegerExpression_Value();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BooleanExpression <em>Boolean Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BooleanExpression
   * @generated
   */
  EClass getBooleanExpression();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.BooleanExpression#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.BooleanExpression#isValue()
   * @see #getBooleanExpression()
   * @generated
   */
  EAttribute getBooleanExpression_Value();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.StringExpression <em>String Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.StringExpression
   * @generated
   */
  EClass getStringExpression();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.StringExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.StringExpression#getValue()
   * @see #getStringExpression()
   * @generated
   */
  EAttribute getStringExpression_Value();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression#getType()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_Type();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.UnaryExpression#getSource()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Source();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.VariableExpression <em>Variable Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.VariableExpression
   * @generated
   */
  EClass getVariableExpression();

  /**
   * Returns the meta object for the reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.VariableExpression#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.VariableExpression#getVariable()
   * @see #getVariableExpression()
   * @generated
   */
  EReference getVariableExpression_Variable();

  /**
   * Returns the meta object for class '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression <em>Paranthesis Or Binary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Paranthesis Or Binary Expression</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression
   * @generated
   */
  EClass getParanthesisOrBinaryExpression();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getSource()
   * @see #getParanthesisOrBinaryExpression()
   * @generated
   */
  EReference getParanthesisOrBinaryExpression_Source();

  /**
   * Returns the meta object for the attribute '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getType()
   * @see #getParanthesisOrBinaryExpression()
   * @generated
   */
  EAttribute getParanthesisOrBinaryExpression_Type();

  /**
   * Returns the meta object for the containment reference '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getArgument <em>Argument</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Argument</em>'.
   * @see at.ac.tuwien.big.simpleaspect.simpleAspect.ParanthesisOrBinaryExpression#getArgument()
   * @see #getParanthesisOrBinaryExpression()
   * @generated
   */
  EReference getParanthesisOrBinaryExpression_Argument();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SimpleAspectFactory getSimpleAspectFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectImpl <em>Aspect</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAspect()
     * @generated
     */
    EClass ASPECT = eINSTANCE.getAspect();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASPECT__NAME = eINSTANCE.getAspect_Name();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASPECT__ATTRIBUTES = eINSTANCE.getAspect_Attributes();

    /**
     * The meta object literal for the '<em><b>Methods</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASPECT__METHODS = eINSTANCE.getAspect_Methods();

    /**
     * The meta object literal for the '<em><b>Pointcuts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASPECT__POINTCUTS = eINSTANCE.getAspect_Pointcuts();

    /**
     * The meta object literal for the '<em><b>Advices</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASPECT__ADVICES = eINSTANCE.getAspect_Advices();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForeignAttributeImpl <em>Foreign Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForeignAttributeImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForeignAttribute()
     * @generated
     */
    EClass FOREIGN_ATTRIBUTE = eINSTANCE.getForeignAttribute();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREIGN_ATTRIBUTE__TYPE = eINSTANCE.getForeignAttribute_Type();

    /**
     * The meta object literal for the '<em><b>In Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOREIGN_ATTRIBUTE__IN_TYPE = eINSTANCE.getForeignAttribute_InType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOREIGN_ATTRIBUTE__NAME = eINSTANCE.getForeignAttribute_Name();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREIGN_ATTRIBUTE__EXPRESSION = eINSTANCE.getForeignAttribute_Expression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutImpl <em>Pointcut</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcut()
     * @generated
     */
    EClass POINTCUT = eINSTANCE.getPointcut();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT__NAME = eINSTANCE.getPointcut_Name();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT__PARAMETER = eINSTANCE.getPointcut_Parameter();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT__CONDITION = eINSTANCE.getPointcut_Condition();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutConditionImpl <em>Pointcut Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutConditionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutCondition()
     * @generated
     */
    EClass POINTCUT_CONDITION = eINSTANCE.getPointcutCondition();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryPointcutConditionImpl <em>Unary Pointcut Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryPointcutConditionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getUnaryPointcutCondition()
     * @generated
     */
    EClass UNARY_POINTCUT_CONDITION = eINSTANCE.getUnaryPointcutCondition();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_POINTCUT_CONDITION__CONDITION = eINSTANCE.getUnaryPointcutCondition_Condition();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BinaryPointcutConditionImpl <em>Binary Pointcut Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BinaryPointcutConditionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getBinaryPointcutCondition()
     * @generated
     */
    EClass BINARY_POINTCUT_CONDITION = eINSTANCE.getBinaryPointcutCondition();

    /**
     * The meta object literal for the '<em><b>First</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_POINTCUT_CONDITION__FIRST = eINSTANCE.getBinaryPointcutCondition_First();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_POINTCUT_CONDITION__TYPE = eINSTANCE.getBinaryPointcutCondition_Type();

    /**
     * The meta object literal for the '<em><b>Second</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_POINTCUT_CONDITION__SECOND = eINSTANCE.getBinaryPointcutCondition_Second();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimplePointcutConditionImpl <em>Simple Pointcut Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimplePointcutConditionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimplePointcutCondition()
     * @generated
     */
    EClass SIMPLE_POINTCUT_CONDITION = eINSTANCE.getSimplePointcutCondition();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_POINTCUT_CONDITION__TYPE = eINSTANCE.getSimplePointcutCondition_Type();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_POINTCUT_CONDITION__CONDITION = eINSTANCE.getSimplePointcutCondition_Condition();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutMethodFilterImpl <em>Pointcut Method Filter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutMethodFilterImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutMethodFilter()
     * @generated
     */
    EClass POINTCUT_METHOD_FILTER = eINSTANCE.getPointcutMethodFilter();

    /**
     * The meta object literal for the '<em><b>Is Public</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__IS_PUBLIC = eINSTANCE.getPointcutMethodFilter_IsPublic();

    /**
     * The meta object literal for the '<em><b>Is Private</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__IS_PRIVATE = eINSTANCE.getPointcutMethodFilter_IsPrivate();

    /**
     * The meta object literal for the '<em><b>Is Static</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__IS_STATIC = eINSTANCE.getPointcutMethodFilter_IsStatic();

    /**
     * The meta object literal for the '<em><b>Any Return</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__ANY_RETURN = eINSTANCE.getPointcutMethodFilter_AnyReturn();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT_METHOD_FILTER__RETURN_TYPE = eINSTANCE.getPointcutMethodFilter_ReturnType();

    /**
     * The meta object literal for the '<em><b>Any Class</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__ANY_CLASS = eINSTANCE.getPointcutMethodFilter_AnyClass();

    /**
     * The meta object literal for the '<em><b>Class Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__CLASS_TYPE = eINSTANCE.getPointcutMethodFilter_ClassType();

    /**
     * The meta object literal for the '<em><b>Any Method</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__ANY_METHOD = eINSTANCE.getPointcutMethodFilter_AnyMethod();

    /**
     * The meta object literal for the '<em><b>Method Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__METHOD_NAME = eINSTANCE.getPointcutMethodFilter_MethodName();

    /**
     * The meta object literal for the '<em><b>Any Parameter</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_METHOD_FILTER__ANY_PARAMETER = eINSTANCE.getPointcutMethodFilter_AnyParameter();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT_METHOD_FILTER__PARAMETER = eINSTANCE.getPointcutMethodFilter_Parameter();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutTypeFilterImpl <em>Pointcut Type Filter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutTypeFilterImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutTypeFilter()
     * @generated
     */
    EClass POINTCUT_TYPE_FILTER = eINSTANCE.getPointcutTypeFilter();

    /**
     * The meta object literal for the '<em><b>Class Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POINTCUT_TYPE_FILTER__CLASS_TYPE = eINSTANCE.getPointcutTypeFilter_ClassType();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AdviceImpl <em>Advice</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AdviceImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAdvice()
     * @generated
     */
    EClass ADVICE = eINSTANCE.getAdvice();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADVICE__TYPE = eINSTANCE.getAdvice_Type();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADVICE__PARAMETER = eINSTANCE.getAdvice_Parameter();

    /**
     * The meta object literal for the '<em><b>Pointcut</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADVICE__POINTCUT = eINSTANCE.getAdvice_Pointcut();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADVICE__CODE = eINSTANCE.getAdvice_Code();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutRefImpl <em>Pointcut Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.PointcutRefImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getPointcutRef()
     * @generated
     */
    EClass POINTCUT_REF = eINSTANCE.getPointcutRef();

    /**
     * The meta object literal for the '<em><b>Pointcut</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT_REF__POINTCUT = eINSTANCE.getPointcutRef_Pointcut();

    /**
     * The meta object literal for the '<em><b>Parameter Value</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTCUT_REF__PARAMETER_VALUE = eINSTANCE.getPointcutRef_ParameterValue();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParameterImpl <em>Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParameterImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getParameter()
     * @generated
     */
    EClass PARAMETER = eINSTANCE.getParameter();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER__TYPE = eINSTANCE.getParameter_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER__NAME = eINSTANCE.getParameter_Name();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.TypeImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__TYPE_NAME = eINSTANCE.getType_TypeName();

    /**
     * The meta object literal for the '<em><b>Type Ref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__TYPE_REF = eINSTANCE.getType_TypeRef();

    /**
     * The meta object literal for the '<em><b>Is Void</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__IS_VOID = eINSTANCE.getType_IsVoid();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethod()
     * @generated
     */
    EClass METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '<em><b>Static</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__STATIC = eINSTANCE.getMethod_Static();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__RETURN_TYPE = eINSTANCE.getMethod_ReturnType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__NAME = eINSTANCE.getMethod_Name();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__PARAMETER = eINSTANCE.getMethod_Parameter();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__CONTENT = eINSTANCE.getMethod_Content();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodBlockImpl <em>Method Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodBlockImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethodBlock()
     * @generated
     */
    EClass METHOD_BLOCK = eINSTANCE.getMethodBlock();

    /**
     * The meta object literal for the '<em><b>Generated</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD_BLOCK__GENERATED = eINSTANCE.getMethodBlock_Generated();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_BLOCK__STATEMENTS = eINSTANCE.getMethodBlock_Statements();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleStatementImpl <em>Simple Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimpleStatement()
     * @generated
     */
    EClass SIMPLE_STATEMENT = eINSTANCE.getSimpleStatement();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleVariableDeclarationImpl <em>Simple Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleVariableDeclarationImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getSimpleVariableDeclaration()
     * @generated
     */
    EClass SIMPLE_VARIABLE_DECLARATION = eINSTANCE.getSimpleVariableDeclaration();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableDeclarationImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getVariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__PARAMETER = eINSTANCE.getVariableDeclaration_Parameter();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__EXPRESSION = eINSTANCE.getVariableDeclaration_Expression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AssignmentImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__PARAMETER = eINSTANCE.getAssignment_Parameter();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__EXPRESSION = eINSTANCE.getAssignment_Expression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IfStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__CONDITION = eINSTANCE.getIfStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__THEN = eINSTANCE.getIfStatement_Then();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__ELSE = eINSTANCE.getIfStatement_Else();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForStatementImpl <em>For Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForStatement()
     * @generated
     */
    EClass FOR_STATEMENT = eINSTANCE.getForStatement();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__INIT = eINSTANCE.getForStatement_Init();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__CONDITION = eINSTANCE.getForStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Continuation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__CONTINUATION = eINSTANCE.getForStatement_Continuation();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__BODY = eINSTANCE.getForStatement_Body();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForInStatementImpl <em>For In Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ForInStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getForInStatement()
     * @generated
     */
    EClass FOR_IN_STATEMENT = eINSTANCE.getForInStatement();

    /**
     * The meta object literal for the '<em><b>Subparameter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_IN_STATEMENT__SUBPARAMETER = eINSTANCE.getForInStatement_Subparameter();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_IN_STATEMENT__EXPRESSION = eINSTANCE.getForInStatement_Expression();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_IN_STATEMENT__BODY = eINSTANCE.getForInStatement_Body();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.WhileStatementImpl <em>While Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.WhileStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getWhileStatement()
     * @generated
     */
    EClass WHILE_STATEMENT = eINSTANCE.getWhileStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__CONDITION = eINSTANCE.getWhileStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__BODY = eINSTANCE.getWhileStatement_Body();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ReturnStatementImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getReturnStatement()
     * @generated
     */
    EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_STATEMENT__EXPRESSION = eINSTANCE.getReturnStatement_Expression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodCallImpl <em>Method Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.MethodCallImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getMethodCall()
     * @generated
     */
    EClass METHOD_CALL = eINSTANCE.getMethodCall();

    /**
     * The meta object literal for the '<em><b>Object</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_CALL__OBJECT = eINSTANCE.getMethodCall_Object();

    /**
     * The meta object literal for the '<em><b>This Object</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD_CALL__THIS_OBJECT = eINSTANCE.getMethodCall_ThisObject();

    /**
     * The meta object literal for the '<em><b>Method</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_CALL__METHOD = eINSTANCE.getMethodCall_Method();

    /**
     * The meta object literal for the '<em><b>Method Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD_CALL__METHOD_NAME = eINSTANCE.getMethodCall_MethodName();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD_CALL__PARAMETER = eINSTANCE.getMethodCall_Parameter();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.GenericExpressionImpl <em>Generic Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.GenericExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getGenericExpression()
     * @generated
     */
    EClass GENERIC_EXPRESSION = eINSTANCE.getGenericExpression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstructorCallImpl <em>Constructor Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstructorCallImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getConstructorCall()
     * @generated
     */
    EClass CONSTRUCTOR_CALL = eINSTANCE.getConstructorCall();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRUCTOR_CALL__TYPE = eINSTANCE.getConstructorCall_Type();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRUCTOR_CALL__PARAMETER = eINSTANCE.getConstructorCall_Parameter();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstantExpressionImpl <em>Constant Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ConstantExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getConstantExpression()
     * @generated
     */
    EClass CONSTANT_EXPRESSION = eINSTANCE.getConstantExpression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectExpressionImpl <em>Aspect Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.AspectExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getAspectExpression()
     * @generated
     */
    EClass ASPECT_EXPRESSION = eINSTANCE.getAspectExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASPECT_EXPRESSION__VALUE = eINSTANCE.getAspectExpression_Value();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.NullExpressionImpl <em>Null Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.NullExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getNullExpression()
     * @generated
     */
    EClass NULL_EXPRESSION = eINSTANCE.getNullExpression();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IntegerExpressionImpl <em>Integer Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.IntegerExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getIntegerExpression()
     * @generated
     */
    EClass INTEGER_EXPRESSION = eINSTANCE.getIntegerExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INTEGER_EXPRESSION__VALUE = eINSTANCE.getIntegerExpression_Value();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BooleanExpressionImpl <em>Boolean Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.BooleanExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getBooleanExpression()
     * @generated
     */
    EClass BOOLEAN_EXPRESSION = eINSTANCE.getBooleanExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_EXPRESSION__VALUE = eINSTANCE.getBooleanExpression_Value();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StringExpressionImpl <em>String Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.StringExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getStringExpression()
     * @generated
     */
    EClass STRING_EXPRESSION = eINSTANCE.getStringExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_EXPRESSION__VALUE = eINSTANCE.getStringExpression_Value();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.UnaryExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__TYPE = eINSTANCE.getUnaryExpression_Type();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__SOURCE = eINSTANCE.getUnaryExpression_Source();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableExpressionImpl <em>Variable Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.VariableExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getVariableExpression()
     * @generated
     */
    EClass VARIABLE_EXPRESSION = eINSTANCE.getVariableExpression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_EXPRESSION__VARIABLE = eINSTANCE.getVariableExpression_Variable();

    /**
     * The meta object literal for the '{@link at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParanthesisOrBinaryExpressionImpl <em>Paranthesis Or Binary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.ParanthesisOrBinaryExpressionImpl
     * @see at.ac.tuwien.big.simpleaspect.simpleAspect.impl.SimpleAspectPackageImpl#getParanthesisOrBinaryExpression()
     * @generated
     */
    EClass PARANTHESIS_OR_BINARY_EXPRESSION = eINSTANCE.getParanthesisOrBinaryExpression();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARANTHESIS_OR_BINARY_EXPRESSION__SOURCE = eINSTANCE.getParanthesisOrBinaryExpression_Source();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARANTHESIS_OR_BINARY_EXPRESSION__TYPE = eINSTANCE.getParanthesisOrBinaryExpression_Type();

    /**
     * The meta object literal for the '<em><b>Argument</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARANTHESIS_OR_BINARY_EXPRESSION__ARGUMENT = eINSTANCE.getParanthesisOrBinaryExpression_Argument();

  }

} //SimpleAspectPackage
