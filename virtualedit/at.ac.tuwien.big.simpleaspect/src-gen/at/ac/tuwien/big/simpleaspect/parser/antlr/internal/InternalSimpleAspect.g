/*
 * generated by Xtext 2.10.0
 */
grammar InternalSimpleAspect;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package at.ac.tuwien.big.simpleaspect.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.tuwien.big.simpleaspect.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.tuwien.big.simpleaspect.services.SimpleAspectGrammarAccess;

}

@parser::members {

 	private SimpleAspectGrammarAccess grammarAccess;

    public InternalSimpleAspectParser(TokenStream input, SimpleAspectGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Aspect";
   	}

   	@Override
   	protected SimpleAspectGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAspect
entryRuleAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAspectRule()); }
	iv_ruleAspect=ruleAspect
	{ $current=$iv_ruleAspect.current; }
	EOF;

// Rule Aspect
ruleAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='aspect'
		{
			newLeafNode(otherlv_0, grammarAccess.getAspectAccess().getAspectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAspectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAspectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAspectAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAspectAccess().getAttributesForeignAttributeParserRuleCall_3_0_0());
					}
					lv_attributes_3_0=ruleForeignAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAspectRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.ForeignAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAspectAccess().getMethodsMethodParserRuleCall_3_1_0());
					}
					lv_methods_4_0=ruleMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAspectRule());
						}
						add(
							$current,
							"methods",
							lv_methods_4_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Method");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAspectAccess().getPointcutsPointcutParserRuleCall_3_2_0());
					}
					lv_pointcuts_5_0=rulePointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAspectRule());
						}
						add(
							$current,
							"pointcuts",
							lv_pointcuts_5_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Pointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAspectAccess().getAdvicesAdviceParserRuleCall_3_3_0());
					}
					lv_advices_6_0=ruleAdvice
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAspectRule());
						}
						add(
							$current,
							"advices",
							lv_advices_6_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Advice");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAspectAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleForeignAttribute
entryRuleForeignAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeignAttributeRule()); }
	iv_ruleForeignAttribute=ruleForeignAttribute
	{ $current=$iv_ruleForeignAttribute.current; }
	EOF;

// Rule ForeignAttribute
ruleForeignAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='private'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeignAttributeAccess().getPrivateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeignAttributeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeignAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForeignAttributeAccess().getInTypeQualifiedNameParserRuleCall_2_0_0());
					}
					lv_inType_2_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForeignAttributeRule());
						}
						set(
							$current,
							"inType",
							lv_inType_2_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='/'
			{
				newLeafNode(otherlv_3, grammarAccess.getForeignAttributeAccess().getSolidusKeyword_2_1());
			}
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getForeignAttributeAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForeignAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getForeignAttributeAccess().getEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForeignAttributeAccess().getExpressionGenericExpressionParserRuleCall_4_1_0());
					}
					lv_expression_6_0=ruleGenericExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForeignAttributeRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getForeignAttributeAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRulePointcut
entryRulePointcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointcutRule()); }
	iv_rulePointcut=rulePointcut
	{ $current=$iv_rulePointcut.current; }
	EOF;

// Rule Pointcut
rulePointcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pointcut'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointcutAccess().getPointcutKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPointcutAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointcutRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getPointcutAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPointcutAccess().getParameterParameterParserRuleCall_3_0_0());
					}
					lv_parameter_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointcutRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getPointcutAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPointcutAccess().getParameterParameterParserRuleCall_3_1_1_0());
						}
						lv_parameter_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPointcutRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_5_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getPointcutAccess().getRightParenthesisKeyword_4());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getPointcutAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointcutAccess().getConditionPointcutConditionParserRuleCall_6_0());
				}
				lv_condition_8_0=rulePointcutCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointcutRule());
					}
					set(
						$current,
						"condition",
						lv_condition_8_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getPointcutAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRulePointcutCondition
entryRulePointcutCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointcutConditionRule()); }
	iv_rulePointcutCondition=rulePointcutCondition
	{ $current=$iv_rulePointcutCondition.current; }
	EOF;

// Rule PointcutCondition
rulePointcutCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPointcutConditionAccess().getSimplePointcutConditionParserRuleCall_0());
		}
		this_SimplePointcutCondition_0=ruleSimplePointcutCondition
		{
			$current = $this_SimplePointcutCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPointcutConditionAccess().getBinaryPointcutConditionParserRuleCall_1());
		}
		this_BinaryPointcutCondition_1=ruleBinaryPointcutCondition
		{
			$current = $this_BinaryPointcutCondition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPointcutConditionAccess().getUnaryPointcutConditionParserRuleCall_2());
		}
		this_UnaryPointcutCondition_2=ruleUnaryPointcutCondition
		{
			$current = $this_UnaryPointcutCondition_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnaryPointcutCondition
entryRuleUnaryPointcutCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryPointcutConditionRule()); }
	iv_ruleUnaryPointcutCondition=ruleUnaryPointcutCondition
	{ $current=$iv_ruleUnaryPointcutCondition.current; }
	EOF;

// Rule UnaryPointcutCondition
ruleUnaryPointcutCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnaryPointcutConditionAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryPointcutConditionAccess().getConditionPointcutConditionParserRuleCall_1_0());
				}
				lv_condition_1_0=rulePointcutCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryPointcutConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBinaryPointcutCondition
entryRuleBinaryPointcutCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryPointcutConditionRule()); }
	iv_ruleBinaryPointcutCondition=ruleBinaryPointcutCondition
	{ $current=$iv_ruleBinaryPointcutCondition.current; }
	EOF;

// Rule BinaryPointcutCondition
ruleBinaryPointcutCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBinaryPointcutConditionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryPointcutConditionAccess().getFirstPointcutConditionParserRuleCall_1_0());
				}
				lv_first_1_0=rulePointcutCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryPointcutConditionRule());
					}
					set(
						$current,
						"first",
						lv_first_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBinaryPointcutConditionAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				(
					lv_type_3_0='||'
					{
						newLeafNode(lv_type_3_0, grammarAccess.getBinaryPointcutConditionAccess().getTypeVerticalLineVerticalLineKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryPointcutConditionRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_0, "||");
					}
				)
			)
			    |
			(
				(
					lv_type_4_0='&&'
					{
						newLeafNode(lv_type_4_0, grammarAccess.getBinaryPointcutConditionAccess().getTypeAmpersandAmpersandKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryPointcutConditionRule());
						}
						setWithLastConsumed($current, "type", lv_type_4_0, "&&");
					}
				)
			)
		)
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getBinaryPointcutConditionAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryPointcutConditionAccess().getSecondPointcutConditionParserRuleCall_5_0());
				}
				lv_second_6_0=rulePointcutCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryPointcutConditionRule());
					}
					set(
						$current,
						"second",
						lv_second_6_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getBinaryPointcutConditionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleSimplePointcutCondition
entryRuleSimplePointcutCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimplePointcutConditionRule()); }
	iv_ruleSimplePointcutCondition=ruleSimplePointcutCondition
	{ $current=$iv_ruleSimplePointcutCondition.current; }
	EOF;

// Rule SimplePointcutCondition
ruleSimplePointcutCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_type_0_0='call'
						{
							newLeafNode(lv_type_0_0, grammarAccess.getSimplePointcutConditionAccess().getTypeCallKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePointcutConditionRule());
							}
							setWithLastConsumed($current, "type", lv_type_0_0, "call");
						}
					)
				)
				    |
				(
					(
						lv_type_1_0='execution'
						{
							newLeafNode(lv_type_1_0, grammarAccess.getSimplePointcutConditionAccess().getTypeExecutionKeyword_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePointcutConditionRule());
							}
							setWithLastConsumed($current, "type", lv_type_1_0, "execution");
						}
					)
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getSimplePointcutConditionAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplePointcutConditionAccess().getConditionPointcutMethodFilterParserRuleCall_0_2_0());
					}
					lv_condition_3_0=rulePointcutMethodFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplePointcutConditionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutMethodFilter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getSimplePointcutConditionAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					(
						lv_type_5_0='within'
						{
							newLeafNode(lv_type_5_0, grammarAccess.getSimplePointcutConditionAccess().getTypeWithinKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePointcutConditionRule());
							}
							setWithLastConsumed($current, "type", lv_type_5_0, "within");
						}
					)
				)
				    |
				(
					(
						lv_type_6_0='handler'
						{
							newLeafNode(lv_type_6_0, grammarAccess.getSimplePointcutConditionAccess().getTypeHandlerKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSimplePointcutConditionRule());
							}
							setWithLastConsumed($current, "type", lv_type_6_0, "handler");
						}
					)
				)
			)
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getSimplePointcutConditionAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplePointcutConditionAccess().getConditionPointcutTypeFilterParserRuleCall_1_2_0());
					}
					lv_condition_8_0=rulePointcutTypeFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplePointcutConditionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_8_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutTypeFilter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getSimplePointcutConditionAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRulePointcutMethodFilter
entryRulePointcutMethodFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointcutMethodFilterRule()); }
	iv_rulePointcutMethodFilter=rulePointcutMethodFilter
	{ $current=$iv_rulePointcutMethodFilter.current; }
	EOF;

// Rule PointcutMethodFilter
rulePointcutMethodFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isPublic_0_0='public'
				{
					newLeafNode(lv_isPublic_0_0, grammarAccess.getPointcutMethodFilterAccess().getIsPublicPublicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
					}
					setWithLastConsumed($current, "isPublic", true, "public");
				}
			)
		)?
		(
			(
				lv_isPrivate_1_0='private'
				{
					newLeafNode(lv_isPrivate_1_0, grammarAccess.getPointcutMethodFilterAccess().getIsPrivatePrivateKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
					}
					setWithLastConsumed($current, "isPrivate", true, "private");
				}
			)
		)?
		(
			(
				lv_isStatic_2_0='static'
				{
					newLeafNode(lv_isStatic_2_0, grammarAccess.getPointcutMethodFilterAccess().getIsStaticStaticKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
					}
					setWithLastConsumed($current, "isStatic", true, "static");
				}
			)
		)?
		(
			(
				(
					lv_anyReturn_3_0='*'
					{
						newLeafNode(lv_anyReturn_3_0, grammarAccess.getPointcutMethodFilterAccess().getAnyReturnAsteriskKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
						}
						setWithLastConsumed($current, "anyReturn", true, "*");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPointcutMethodFilterAccess().getReturnTypeTypeParserRuleCall_3_1_0());
					}
					lv_returnType_4_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointcutMethodFilterRule());
						}
						set(
							$current,
							"returnType",
							lv_returnType_4_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_anyClass_5_0='*'
					{
						newLeafNode(lv_anyClass_5_0, grammarAccess.getPointcutMethodFilterAccess().getAnyClassAsteriskKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
						}
						setWithLastConsumed($current, "anyClass", true, "*");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPointcutMethodFilterAccess().getClassTypeQualifiedNameParserRuleCall_4_1_0());
					}
					lv_classType_6_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointcutMethodFilterRule());
						}
						set(
							$current,
							"classType",
							lv_classType_6_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_anyMethod_7_0='*'
					{
						newLeafNode(lv_anyMethod_7_0, grammarAccess.getPointcutMethodFilterAccess().getAnyMethodAsteriskKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
						}
						setWithLastConsumed($current, "anyMethod", true, "*");
					}
				)
			)
			    |
			(
				(
					lv_methodName_8_0=RULE_ID
					{
						newLeafNode(lv_methodName_8_0, grammarAccess.getPointcutMethodFilterAccess().getMethodNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
						}
						setWithLastConsumed(
							$current,
							"methodName",
							lv_methodName_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		otherlv_9='('
		{
			newLeafNode(otherlv_9, grammarAccess.getPointcutMethodFilterAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				(
					lv_anyParameter_10_0='..'
					{
						newLeafNode(lv_anyParameter_10_0, grammarAccess.getPointcutMethodFilterAccess().getAnyParameterFullStopFullStopKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPointcutMethodFilterRule());
						}
						setWithLastConsumed($current, "anyParameter", true, "..");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPointcutMethodFilterAccess().getParameterTypeParserRuleCall_7_1_0_0());
						}
						lv_parameter_11_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPointcutMethodFilterRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_11_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12=','
					{
						newLeafNode(otherlv_12, grammarAccess.getPointcutMethodFilterAccess().getCommaKeyword_7_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPointcutMethodFilterAccess().getParameterTypeParserRuleCall_7_1_1_1_0());
							}
							lv_parameter_13_0=ruleType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPointcutMethodFilterRule());
								}
								add(
									$current,
									"parameter",
									lv_parameter_13_0,
									"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getPointcutMethodFilterAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRulePointcutTypeFilter
entryRulePointcutTypeFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointcutTypeFilterRule()); }
	iv_rulePointcutTypeFilter=rulePointcutTypeFilter
	{ $current=$iv_rulePointcutTypeFilter.current; }
	EOF;

// Rule PointcutTypeFilter
rulePointcutTypeFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointcutTypeFilterAccess().getPointcutTypeFilterAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPointcutTypeFilterAccess().getClassTypeQualifiedNameParserRuleCall_1_0());
				}
				lv_classType_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointcutTypeFilterRule());
					}
					set(
						$current,
						"classType",
						lv_classType_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAdvice
entryRuleAdvice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdviceRule()); }
	iv_ruleAdvice=ruleAdvice
	{ $current=$iv_ruleAdvice.current; }
	EOF;

// Rule Advice
ruleAdvice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAdviceAccess().getAdviceAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_type_1_0='before'
					{
						newLeafNode(lv_type_1_0, grammarAccess.getAdviceAccess().getTypeBeforeKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdviceRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_0, "before");
					}
				)
			)
			    |
			(
				(
					lv_type_2_0='after'
					{
						newLeafNode(lv_type_2_0, grammarAccess.getAdviceAccess().getTypeAfterKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdviceRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_0, "after");
					}
				)
			)
			    |
			(
				(
					lv_type_3_0='around'
					{
						newLeafNode(lv_type_3_0, grammarAccess.getAdviceAccess().getTypeAroundKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdviceRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_0, "around");
					}
				)
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAdviceAccess().getParameterParameterParserRuleCall_3_0_0());
					}
					lv_parameter_5_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdviceRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_5_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getAdviceAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAdviceAccess().getParameterParameterParserRuleCall_3_1_1_0());
						}
						lv_parameter_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAdviceRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_7_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getAdviceAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAdviceAccess().getPointcutPointcutRefParserRuleCall_5_0_0());
					}
					lv_pointcut_9_0=rulePointcutRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdviceRule());
						}
						set(
							$current,
							"pointcut",
							lv_pointcut_9_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.PointcutRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAdviceAccess().getPointcutPointcutParserRuleCall_5_1_0());
					}
					lv_pointcut_10_0=rulePointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdviceRule());
						}
						set(
							$current,
							"pointcut",
							lv_pointcut_10_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Pointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAdviceAccess().getCodeMethodBlockParserRuleCall_6_0());
				}
				lv_code_11_0=ruleMethodBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdviceRule());
					}
					set(
						$current,
						"code",
						lv_code_11_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.MethodBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePointcutRef
entryRulePointcutRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointcutRefRule()); }
	iv_rulePointcutRef=rulePointcutRef
	{ $current=$iv_rulePointcutRef.current; }
	EOF;

// Rule PointcutRef
rulePointcutRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointcutRefRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getPointcutRefAccess().getPointcutPointcutCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPointcutRefAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPointcutRefAccess().getParameterValueVariableExpressionParserRuleCall_2_0_0());
					}
					lv_parameterValue_2_0=ruleVariableExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointcutRefRule());
						}
						add(
							$current,
							"parameterValue",
							lv_parameterValue_2_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.VariableExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getPointcutRefAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPointcutRefAccess().getParameterValueVariableExpressionParserRuleCall_2_1_1_0());
						}
						lv_parameterValue_4_0=ruleVariableExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPointcutRefRule());
							}
							add(
								$current,
								"parameterValue",
								lv_parameterValue_4_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.VariableExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPointcutRefAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_typeName_0_1='int'
					{
						newLeafNode(lv_typeName_0_1, grammarAccess.getTypeAccess().getTypeNameIntKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
					}
					    |
					lv_typeName_0_2='double'
					{
						newLeafNode(lv_typeName_0_2, grammarAccess.getTypeAccess().getTypeNameDoubleKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
					}
					    |
					lv_typeName_0_3='String'
					{
						newLeafNode(lv_typeName_0_3, grammarAccess.getTypeAccess().getTypeNameStringKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
					}
					    |
					lv_typeName_0_4='boolean'
					{
						newLeafNode(lv_typeName_0_4, grammarAccess.getTypeAccess().getTypeNameBooleanKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
					}
					    |
					lv_typeName_0_5='Object'
					{
						newLeafNode(lv_typeName_0_5, grammarAccess.getTypeAccess().getTypeNameObjectKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
					}
					    |
					lv_typeName_0_6='List'
					{
						newLeafNode(lv_typeName_0_6, grammarAccess.getTypeAccess().getTypeNameListKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
					}
					    |
					lv_typeName_0_7='ArrayList'
					{
						newLeafNode(lv_typeName_0_7, grammarAccess.getTypeAccess().getTypeNameArrayListKeyword_0_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
					}
					    |
					lv_typeName_0_8='Logger'
					{
						newLeafNode(lv_typeName_0_8, grammarAccess.getTypeAccess().getTypeNameLoggerKeyword_0_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeRefQualifiedNameParserRuleCall_1_0());
				}
				lv_typeRef_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"typeRef",
						lv_typeRef_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_isVoid_2_0='void'
				{
					newLeafNode(lv_isVoid_2_0, grammarAccess.getTypeAccess().getIsVoidVoidKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "isVoid", true, "void");
				}
			)
		)
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getPublicKeyword_0());
		}
		(
			(
				lv_static_1_0='static'
				{
					newLeafNode(lv_static_1_0, grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed($current, "static", true, "static");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getReturnTypeTypeParserRuleCall_2_0());
				}
				lv_returnType_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getParameterParameterParserRuleCall_5_0_0());
					}
					lv_parameter_5_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_5_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getParameterParameterParserRuleCall_5_1_1_0());
						}
						lv_parameter_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_7_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getContentMethodBlockParserRuleCall_7_0());
				}
				lv_content_9_0=ruleMethodBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"content",
						lv_content_9_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.MethodBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMethodBlock
entryRuleMethodBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodBlockRule()); }
	iv_ruleMethodBlock=ruleMethodBlock
	{ $current=$iv_ruleMethodBlock.current; }
	EOF;

// Rule MethodBlock
ruleMethodBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodBlockAccess().getMethodBlockAction_0(),
					$current);
			}
		)
		(
			(
				lv_generated_1_0='pointcutblock'
				{
					newLeafNode(lv_generated_1_0, grammarAccess.getMethodBlockAccess().getGeneratedPointcutblockKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodBlockRule());
					}
					setWithLastConsumed($current, "generated", true, "pointcutblock");
				}
			)
		)?
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getMethodBlockAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodBlockAccess().getStatementsStatementParserRuleCall_2_1_0());
					}
					lv_statements_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getMethodBlockAccess().getRightCurlyBracketKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStatementRule()); }
	iv_ruleSimpleStatement=ruleSimpleStatement
	{ $current=$iv_ruleSimpleStatement.current; }
	EOF;

// Rule SimpleStatement
ruleSimpleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleStatementAccess().getSimpleVariableDeclarationParserRuleCall_0());
		}
		this_SimpleVariableDeclaration_0=ruleSimpleVariableDeclaration
		{
			$current = $this_SimpleVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleStatementAccess().getAssignmentParserRuleCall_1());
		}
		this_Assignment_1=ruleAssignment
		{
			$current = $this_Assignment_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMethodBlockParserRuleCall_0());
		}
		this_MethodBlock_0=ruleMethodBlock
		{
			$current = $this_MethodBlock_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_1());
		}
		this_VariableDeclaration_1=ruleVariableDeclaration
		{
			$current = $this_VariableDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_2());
		}
		this_Assignment_2=ruleAssignment
		{
			$current = $this_Assignment_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_3());
		}
		this_IfStatement_3=ruleIfStatement
		{
			$current = $this_IfStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4());
		}
		this_ForStatement_4=ruleForStatement
		{
			$current = $this_ForStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForInStatementParserRuleCall_5());
		}
		this_ForInStatement_5=ruleForInStatement
		{
			$current = $this_ForInStatement_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_6());
		}
		this_WhileStatement_6=ruleWhileStatement
		{
			$current = $this_WhileStatement_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_7());
		}
		this_ReturnStatement_7=ruleReturnStatement
		{
			$current = $this_ReturnStatement_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMethodCallParserRuleCall_8());
		}
		this_MethodCall_8=ruleMethodCall
		{
			$current = $this_MethodCall_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleVariableDeclaration
entryRuleSimpleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleVariableDeclarationRule()); }
	iv_ruleSimpleVariableDeclaration=ruleSimpleVariableDeclaration
	{ $current=$iv_ruleSimpleVariableDeclaration.current; }
	EOF;

// Rule SimpleVariableDeclaration
ruleSimpleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleVariableDeclarationAccess().getVariableDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleVariableDeclarationAccess().getParameterParameterParserRuleCall_1_0());
				}
				lv_parameter_1_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleVariableDeclarationRule());
					}
					set(
						$current,
						"parameter",
						lv_parameter_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSimpleVariableDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleVariableDeclarationAccess().getExpressionGenericExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleVariableDeclarationRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getParameterParameterParserRuleCall_0_0());
				}
				lv_parameter_0_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"parameter",
						lv_parameter_0_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getExpressionGenericExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getParameterParameterCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionGenericExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssignmentAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionParanthesisOrBinaryExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleParanthesisOrBinaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.ParanthesisOrBinaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getThenMethodBlockParserRuleCall_2_0());
				}
				lv_then_2_0=ruleMethodBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"then",
						lv_then_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.MethodBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='else'
			{
				newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getElseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseMethodBlockParserRuleCall_3_1_0());
					}
					lv_else_4_0=ruleMethodBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"else",
							lv_else_4_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.MethodBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getInitSimpleStatementParserRuleCall_2_0());
				}
				lv_init_2_0=ruleSimpleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"init",
						lv_init_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.SimpleStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getConditionGenericExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getContinuationSimpleStatementParserRuleCall_6_0());
				}
				lv_continuation_6_0=ruleSimpleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"continuation",
						lv_continuation_6_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.SimpleStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0());
				}
				lv_body_8_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForInStatement
entryRuleForInStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForInStatementRule()); }
	iv_ruleForInStatement=ruleForInStatement
	{ $current=$iv_ruleForInStatement.current; }
	EOF;

// Rule ForInStatement
ruleForInStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForInStatementAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForInStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForInStatementAccess().getSubparameterParameterParserRuleCall_2_0());
				}
				lv_subparameter_2_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForInStatementRule());
					}
					set(
						$current,
						"subparameter",
						lv_subparameter_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getForInStatementAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForInStatementAccess().getExpressionGenericExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForInStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getForInStatementAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForInStatementAccess().getBodyStatementParserRuleCall_6_0());
				}
				lv_body_6_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForInStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionParanthesisOrBinaryExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleParanthesisOrBinaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.ParanthesisOrBinaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_2_0());
				}
				lv_body_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionGenericExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleMethodCall
entryRuleMethodCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodCallRule()); }
	iv_ruleMethodCall=ruleMethodCall
	{ $current=$iv_ruleMethodCall.current; }
	EOF;

// Rule MethodCall
ruleMethodCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
								}
								otherlv_0=RULE_ID
								{
									newLeafNode(otherlv_0, grammarAccess.getMethodCallAccess().getObjectForeignAttributeCrossReference_0_0_0_0_0_0());
								}
							)
						)
						    |
						(
							(
								lv_thisObject_1_0='this'
								{
									newLeafNode(lv_thisObject_1_0, grammarAccess.getMethodCallAccess().getThisObjectThisKeyword_0_0_0_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "thisObject", true, "this");
								}
							)
						)
					)
					otherlv_2='.'
					{
						newLeafNode(otherlv_2, grammarAccess.getMethodCallAccess().getFullStopKeyword_0_0_0_1());
					}
				)?
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMethodCallRule());
								}
							}
							otherlv_3=RULE_ID
							{
								newLeafNode(otherlv_3, grammarAccess.getMethodCallAccess().getMethodMethodCrossReference_0_0_1_0_0());
							}
						)
					)
					    |
					(
						(
							(
								lv_methodName_4_1='equals'
								{
									newLeafNode(lv_methodName_4_1, grammarAccess.getMethodCallAccess().getMethodNameEqualsKeyword_0_0_1_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_1, null);
								}
								    |
								lv_methodName_4_2='hashCode'
								{
									newLeafNode(lv_methodName_4_2, grammarAccess.getMethodCallAccess().getMethodNameHashCodeKeyword_0_0_1_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_2, null);
								}
								    |
								lv_methodName_4_3='add'
								{
									newLeafNode(lv_methodName_4_3, grammarAccess.getMethodCallAccess().getMethodNameAddKeyword_0_0_1_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_3, null);
								}
								    |
								lv_methodName_4_4='remove'
								{
									newLeafNode(lv_methodName_4_4, grammarAccess.getMethodCallAccess().getMethodNameRemoveKeyword_0_0_1_1_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_4, null);
								}
								    |
								lv_methodName_4_5='clear'
								{
									newLeafNode(lv_methodName_4_5, grammarAccess.getMethodCallAccess().getMethodNameClearKeyword_0_0_1_1_0_4());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_5, null);
								}
								    |
								lv_methodName_4_6='logp'
								{
									newLeafNode(lv_methodName_4_6, grammarAccess.getMethodCallAccess().getMethodNameLogpKeyword_0_0_1_1_0_5());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMethodCallRule());
									}
									setWithLastConsumed($current, "methodName", lv_methodName_4_6, null);
								}
							)
						)
					)
				)
			)
			    |
			(
				(
					lv_methodName_5_0='System.out.println'
					{
						newLeafNode(lv_methodName_5_0, grammarAccess.getMethodCallAccess().getMethodNameSystemOutPrintlnKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMethodCallRule());
						}
						setWithLastConsumed($current, "methodName", lv_methodName_5_0, "System.out.println");
					}
				)
			)
		)
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodCallAccess().getParameterGenericExpressionParserRuleCall_2_0_0());
					}
					lv_parameter_7_0=ruleGenericExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodCallRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_7_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodCallAccess().getParameterGenericExpressionParserRuleCall_2_1_1_0());
						}
						lv_parameter_9_0=ruleGenericExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodCallRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_9_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getMethodCallAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleGenericExpression
entryRuleGenericExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericExpressionRule()); }
	iv_ruleGenericExpression=ruleGenericExpression
	{ $current=$iv_ruleGenericExpression.current; }
	EOF;

// Rule GenericExpression
ruleGenericExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getVariableExpressionParserRuleCall_0());
		}
		this_VariableExpression_0=ruleVariableExpression
		{
			$current = $this_VariableExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getMethodCallParserRuleCall_1());
		}
		this_MethodCall_1=ruleMethodCall
		{
			$current = $this_MethodCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getParanthesisOrBinaryExpressionParserRuleCall_2());
		}
		this_ParanthesisOrBinaryExpression_2=ruleParanthesisOrBinaryExpression
		{
			$current = $this_ParanthesisOrBinaryExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getUnaryExpressionParserRuleCall_3());
		}
		this_UnaryExpression_3=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getConstantExpressionParserRuleCall_4());
		}
		this_ConstantExpression_4=ruleConstantExpression
		{
			$current = $this_ConstantExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenericExpressionAccess().getConstructorCallParserRuleCall_5());
		}
		this_ConstructorCall_5=ruleConstructorCall
		{
			$current = $this_ConstructorCall_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstructorCall
entryRuleConstructorCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorCallRule()); }
	iv_ruleConstructorCall=ruleConstructorCall
	{ $current=$iv_ruleConstructorCall.current; }
	EOF;

// Rule ConstructorCall
ruleConstructorCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='new'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstructorCallAccess().getNewKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorCallAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorCallRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getConstructorCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstructorCallAccess().getParameterConstantExpressionParserRuleCall_3_0_0());
					}
					lv_parameter_3_0=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstructorCallRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getConstructorCallAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstructorCallAccess().getParameterConstantExpressionParserRuleCall_3_1_1_0());
						}
						lv_parameter_5_0=ruleConstantExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstructorCallRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_5_0,
								"at.ac.tuwien.big.simpleaspect.SimpleAspect.ConstantExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getConstructorCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	iv_ruleConstantExpression=ruleConstantExpression
	{ $current=$iv_ruleConstantExpression.current; }
	EOF;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstantExpressionAccess().getIntegerExpressionParserRuleCall_0());
		}
		this_IntegerExpression_0=ruleIntegerExpression
		{
			$current = $this_IntegerExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantExpressionAccess().getStringExpressionParserRuleCall_1());
		}
		this_StringExpression_1=ruleStringExpression
		{
			$current = $this_StringExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantExpressionAccess().getBooleanExpressionParserRuleCall_2());
		}
		this_BooleanExpression_2=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantExpressionAccess().getNullExpressionParserRuleCall_3());
		}
		this_NullExpression_3=ruleNullExpression
		{
			$current = $this_NullExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantExpressionAccess().getAspectExpressionParserRuleCall_4());
		}
		this_AspectExpression_4=ruleAspectExpression
		{
			$current = $this_AspectExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAspectExpression
entryRuleAspectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAspectExpressionRule()); }
	iv_ruleAspectExpression=ruleAspectExpression
	{ $current=$iv_ruleAspectExpression.current; }
	EOF;

// Rule AspectExpression
ruleAspectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='METHOD_NAME'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getAspectExpressionAccess().getValueMETHOD_NAMEKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAspectExpressionRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "METHOD_NAME");
				}
			)
		)
		    |
		(
			(
				lv_value_1_0='CLASS_NAME'
				{
					newLeafNode(lv_value_1_0, grammarAccess.getAspectExpressionAccess().getValueCLASS_NAMEKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAspectExpressionRule());
					}
					setWithLastConsumed($current, "value", lv_value_1_0, "CLASS_NAME");
				}
			)
		)
	)
;

// Entry rule entryRuleNullExpression
entryRuleNullExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullExpressionRule()); }
	iv_ruleNullExpression=ruleNullExpression
	{ $current=$iv_ruleNullExpression.current; }
	EOF;

// Rule NullExpression
ruleNullExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleIntegerExpression
entryRuleIntegerExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerExpressionRule()); }
	iv_ruleIntegerExpression=ruleIntegerExpression
	{ $current=$iv_ruleIntegerExpression.current; }
	EOF;

// Rule IntegerExpression
ruleIntegerExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntegerExpressionAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanExpressionAccess().getBooleanExpressionAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0='true'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getBooleanExpressionAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionRule());
						}
						setWithLastConsumed($current, "value", true, "true");
					}
				)
			)
			    |
			otherlv_2='false'
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanExpressionAccess().getFalseKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleStringExpression
entryRuleStringExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringExpressionRule()); }
	iv_ruleStringExpression=ruleStringExpression
	{ $current=$iv_ruleStringExpression.current; }
	EOF;

// Rule StringExpression
ruleStringExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='!'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getUnaryExpressionAccess().getTypeExclamationMarkKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnaryExpressionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "!");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExpressionAccess().getSourceGenericExpressionParserRuleCall_1_0());
				}
				lv_source_1_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
					}
					set(
						$current,
						"source",
						lv_source_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableExpression
entryRuleVariableExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableExpressionRule()); }
	iv_ruleVariableExpression=ruleVariableExpression
	{ $current=$iv_ruleVariableExpression.current; }
	EOF;

// Rule VariableExpression
ruleVariableExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableExpressionRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getVariableExpressionAccess().getVariableParameterCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleParanthesisOrBinaryExpression
entryRuleParanthesisOrBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParanthesisOrBinaryExpressionRule()); }
	iv_ruleParanthesisOrBinaryExpression=ruleParanthesisOrBinaryExpression
	{ $current=$iv_ruleParanthesisOrBinaryExpression.current; }
	EOF;

// Rule ParanthesisOrBinaryExpression
ruleParanthesisOrBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParanthesisOrBinaryExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParanthesisOrBinaryExpressionAccess().getSourceGenericExpressionParserRuleCall_1_0());
				}
				lv_source_1_0=ruleGenericExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParanthesisOrBinaryExpressionRule());
					}
					set(
						$current,
						"source",
						lv_source_1_0,
						"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_type_2_1='||'
						{
							newLeafNode(lv_type_2_1, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeVerticalLineVerticalLineKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_1, null);
						}
						    |
						lv_type_2_2='&&'
						{
							newLeafNode(lv_type_2_2, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeAmpersandAmpersandKeyword_2_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_2, null);
						}
						    |
						lv_type_2_3='&'
						{
							newLeafNode(lv_type_2_3, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeAmpersandKeyword_2_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_3, null);
						}
						    |
						lv_type_2_4='+'
						{
							newLeafNode(lv_type_2_4, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypePlusSignKeyword_2_0_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_4, null);
						}
						    |
						lv_type_2_5='-'
						{
							newLeafNode(lv_type_2_5, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeHyphenMinusKeyword_2_0_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_5, null);
						}
						    |
						lv_type_2_6='*'
						{
							newLeafNode(lv_type_2_6, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeAsteriskKeyword_2_0_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_6, null);
						}
						    |
						lv_type_2_7='/'
						{
							newLeafNode(lv_type_2_7, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeSolidusKeyword_2_0_0_6());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_7, null);
						}
						    |
						lv_type_2_8='=='
						{
							newLeafNode(lv_type_2_8, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeEqualsSignEqualsSignKeyword_2_0_0_7());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_8, null);
						}
						    |
						lv_type_2_9='!='
						{
							newLeafNode(lv_type_2_9, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeExclamationMarkEqualsSignKeyword_2_0_0_8());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_9, null);
						}
						    |
						lv_type_2_10='<'
						{
							newLeafNode(lv_type_2_10, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeLessThanSignKeyword_2_0_0_9());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_10, null);
						}
						    |
						lv_type_2_11='<='
						{
							newLeafNode(lv_type_2_11, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeLessThanSignEqualsSignKeyword_2_0_0_10());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_11, null);
						}
						    |
						lv_type_2_12='>'
						{
							newLeafNode(lv_type_2_12, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeGreaterThanSignKeyword_2_0_0_11());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_12, null);
						}
						    |
						lv_type_2_13='>='
						{
							newLeafNode(lv_type_2_13, grammarAccess.getParanthesisOrBinaryExpressionAccess().getTypeGreaterThanSignEqualsSignKeyword_2_0_0_12());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParanthesisOrBinaryExpressionRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_13, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParanthesisOrBinaryExpressionAccess().getArgumentGenericExpressionParserRuleCall_2_1_0());
					}
					lv_argument_3_0=ruleGenericExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParanthesisOrBinaryExpressionRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"at.ac.tuwien.big.simpleaspect.SimpleAspect.GenericExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParanthesisOrBinaryExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
